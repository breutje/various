<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
  
<!--

   XMLSchema for mia player playlists

   $Id: output.xsd 51 2010-11-16 10:29:46Z bert $

   Version: 1.8
   Date: 20100720
   Changes: branded/nonbranded is now illegal

   Version: 1.7
   Date: 20090729
   Changes: added png and jpg as valid file extensions

   Version: 1.6
   Date: 20090611
   Changes: added '/' as valid fileType character (to allow sub-folders)
   
   Version: 1.5
   Date: 20090515
   Changes: added 'log' attribute + improved 'fileType' support
   Notes: leaving an empty <File/> element is now illegal (also in the <Globals> section)

   Version: 1.4
   Date: 20090403
   Changes: added <Channel> information

   Version: 1.3
   Date: 20090213
   Changes: cache attribute

   Version: 1.2
   Date: 20080925
   Changes: allow md5sum attribute in File element

   Version: 1.1
   Date: 20080528
   Author: Bert Reuling

-->

<!-- Player: the playlist -->
<xs:element name="Player">
   <xs:complexType>
      <xs:sequence>
         <xs:element ref="Channel" minOccurs="0"/>
         <xs:element ref="Globals" minOccurs="0"/>
         <xs:element ref="Items"/>
         <xs:element ref="Script" minOccurs="0"/>
      </xs:sequence>
      <xs:attribute name="Name" use="optional" type="freetextType"/>
      <xs:attribute name="Description" use="optional" type="freetextType"/>
      <xs:attribute name="Output" use="optional" type="freetextType"/>
      <xs:attribute name="Hash" use="optional" type="hashType"/>
   </xs:complexType>
</xs:element>

<!-- Channel: just information to recreate the list -->
<xs:element name="Channel">
   <xs:complexType>
      <xs:simpleContent>
         <xs:extension base="freetextType">
            <xs:attribute name="id" use="required" type="xs:nonNegativeInteger" />
            <xs:attribute name="start" use="required" type="YmdHisType" />
            <xs:attribute name="duration" use="required" type="smpteType" />
         </xs:extension>
      </xs:simpleContent>
   </xs:complexType>
</xs:element>

<!-- Globals: global items are valid for the entire playlist -->
<xs:element name="Globals">
   <xs:complexType>
      <xs:sequence>
         <xs:element ref="File" minOccurs="0" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
</xs:element>

<!-- Items: the playlist items -->
<xs:element name="Items">
   <xs:complexType>
      <xs:sequence>
         <xs:element ref="Video" maxOccurs="unbounded"/>
      </xs:sequence>
   </xs:complexType>
</xs:element>

<!-- Script: script attributes: loop once, continuous or specified -->
<xs:element name="Script">
   <xs:complexType>
      <!-- loop="0" means loop continuous, loop="1" means loop once, etc -->
      <xs:attribute name="loop" use="required" type="xs:decimal"/>
   </xs:complexType>
</xs:element>

<!-- Video: really a misnomer because it may also be a still or some other virtual asset -->
<xs:element name="Video">
   <xs:complexType>
      <xs:sequence>
         <xs:element ref="File" maxOccurs="1"/>
      </xs:sequence>
      <xs:attribute name="id" use="optional" type="xs:decimal"/>
      <xs:attribute name="start" use="optional" type="smpteType"/>
      <xs:attribute name="length" use="optional" type="smpteType"/>
      <xs:attribute name="stop" use="optional" type="smpteType"/>
      <xs:attribute name="loop" use="optional" type="xs:decimal"/>
      <xs:attribute name="newblock" use="optional" type="xs:decimal"/>
      <xs:attribute name="audio" use="optional" type="xs:decimal"/>
      <xs:attribute name="overlay" use="optional" type="xs:boolean"/>
      <xs:attribute name="bug" use="optional" type="xs:boolean"/>
      <xs:attribute name="cache" use="optional" type="xs:boolean"/>
      <xs:attribute name="log" use="optional" type="xs:boolean"/>
      <xs:attribute name="ambient" use="optional" type="xs:boolean"/>
      <xs:attribute name="ticker" use="optional" type="xs:boolean"/>
   </xs:complexType>
</xs:element>

<!-- File: could be .mkv .mp4 ... for video, .png, or .jpg for stills, .xml for virtual assets -->
<xs:element name="File" type="fileType"/>

<!-- fileType may have optional md5sum hash -->
<xs:complexType name="fileType">
  <xs:simpleContent>
    <xs:extension base="filenameType">
      <xs:attribute name="md5sum" type="md5sumType" />
    </xs:extension>
  </xs:simpleContent>
</xs:complexType>

<!-- Restrict what a filename should look like (TBD) -->
<xs:simpleType name="filenameType">
   <xs:restriction base="xs:string">
      <xs:maxLength value="250"/> 
      <xs:pattern value="[a-zA-Z0-9_/]*\.(xml|mp4|mkv|png|jpg)"/>
   </xs:restriction>
</xs:simpleType>

<!-- free text (use reasonable maximum) -->
<xs:simpleType name="freetextType">
   <xs:restriction base="xs:string">
      <xs:maxLength value="80"/>   
   </xs:restriction>
</xs:simpleType>

<!-- The hash code (vivesta) -->
<xs:simpleType name="hashType">
   <xs:restriction base="xs:string">
      <xs:pattern value="([a-f0-9])*"/>
      <xs:minLength value="4"/>
      <xs:maxLength value="32"/>
   </xs:restriction>
</xs:simpleType>

<!-- The md5sum (hash) code (RFC1321) -->
<xs:simpleType name="md5sumType">
   <xs:restriction base="xs:string">
      <xs:pattern value="([a-f0-9])*"/>
      <xs:length value="32"/>
   </xs:restriction>
</xs:simpleType>

<!-- YmdHisType is php's date('Y-m-d H:i:s') format: e.g. 2009-03-06 14:41:22 -->
<xs:simpleType name="YmdHisType">
   <xs:restriction base="xs:string">
      <xs:pattern value="(2[0-9][0-9][0-9])-([0-1][0-9])-([0-3][0-9]) ([0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9])" />
   </xs:restriction>
</xs:simpleType>

<!-- The timecode or duration cannot exceed 24 hours, assume 25 fps -->
<xs:simpleType name="smpteType">
   <xs:restriction base="xs:string">
      <xs:pattern value="([0-1][0-9]|[2][0-3]):([0-5][0-9]):([0-5][0-9]):([0-1][0-9]|[2][0-4])"/>
   </xs:restriction>
</xs:simpleType>

</xs:schema>
